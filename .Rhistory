geom_line(aes(color = padd_descrip))+
theme_minimal()+
scale_x_date(date_breaks = "1 months", date_labels="%B %Y")+
scale_y_continuous(breaks = seq(0,ceiling(max(gas_monthly_average_w_national$monthly_average)), by = 1),
limits = c(0, NA)) +
labs(y="Dollars", x="", color = "Region", title="Average Gas Price per Month: Past 6 Months")
ggplotly(gas_over_time_plot)
library(DBI)
library(RSQLite)
library(tidyverse)
library(here)
library(lubridate)
library(ggplot2)
library(TSstudio)
library(plotly)
library(stargazer)
library(glue)
library(tsibble)
library(forecast)
library(scales)
library(zoo)
knitr::opts_chunk$set(echo = FALSE, fig.show='asis')
current_date <- Sys.Date()
current_month <- month(Sys.Date())
first_day_of_current_month <- as.Date(format(current_date, "%Y-%m-01"))
ts_seasonal(ts_national, type="cycle")+
labs(title="Test")
cycle_data <- ts_seasonal(ts_national, type="cycle", plot=FALSE)
cycle_data <- ts_seasonal(ts_national, type="cycle", plot=FALSE)
cycle_data <- ts_seasonal(ts_national, type="cycle")
plot(cycle_data, main="Custom Title")
ts_seasonal(ts_national, type="cycle")
title(main="Custom Title")
title(main="Custom Title")
ts_seasonal(ts_national, type="cycle") %>%
title(main="Custom Title")
ts_seasonal(ts_national, type="cycle")
ts_seasonal(ts_national, type="cycle", title="Test")
ts_seasonal(ts_national, type="cycle", title="National Average: Monthly Cycle Trends")
ts_seasonal(ts_national, type="box", title="National Average: Box Plot")
ts_seasonal(ts_national, type="box", title="National Average: Box Plot" x="Dollars")
ts_seasonal(ts_national, type="box", title="National Average: Box Plot")
ts_national_df_normed <- ts_national_df %>%
group_by(year) %>%
mutate(price_normed = rescale(monthly_average, to = c(-1, 1), centre = TRUE)) %>%
ungroup()
ts_national_normed <- ts(ts_national_df_normed %>% pull(price_normed), start = c(2014, 3), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_normed)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Trends: Normalized", x="Dollars")+
scale_y_continuous(limits=c(-3,3))
ggplotly(national_trend_normed_plot)
ts_national_df_detrended <- ts_national_df %>%
group_by(year) %>%
mutate(trend_removed = monthly_average - lag(monthly_average)) %>%
mutate(price_normed = rescale(trend_removed, to = c(-1, 1))) %>%
ungroup()
ts_national_detrended <- ts(ts_national_df_detrended %>% pull(price_normed), start = c(2014, 3), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Trends: Normalized", x="Dollars")+
scale_y_continuous(limits=c(-3,3))
ggplotly(national_trend_normed_plot)
ts_national_df <- gas_monthly_average_w_national %>%
filter(padd_descrip == "National (All Regions)", period_month>Sys.Date() %m-% years(10)) %>%
arrange(period_month) %>%
mutate(year = year(period_month), month = month(period_month))
ts_national <- ts(ts_national_df %>% pull(monthly_average), start = c(2014, 3), frequency = 12)
ggplot(ts_national_df, aes(x = monthly_average, fill = as.factor(month))) +
geom_density(alpha = 0.5) +  # Adjust alpha for transparency if desired
facet_grid(rows = vars(as.factor(month))) +  # Use facet_grid to layout plots in a grid
theme_minimal() +
labs(x = "Monthly Average", y = "Density", title = "Density Plot by Month for National Monthly Average", fill = "Month") +
theme(strip.text.y = element_text(angle = 0))  # Rotate the facet labels for better readability
national_trend_polt <- ggseasonplot(ts_national)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Trends", x="Dollars")+
scale_y_continuous(limits = c(0, NA))
ggplotly(national_trend_polt)
ts_national_df_detrended <- ts_national_df %>%
group_by(year) %>%
mutate(trend_removed = monthly_average - mean(c(lag(monthly_average, 1, default = NA),lag(monthly_average, 2, default = NA),
lag(monthly_average, 3, default = NA)),
na.rm = TRUE)) %>%
mutate(price_normed = rescale(trend_removed, to = c(-1, 1))) %>%
ungroup()
ts_national_detrended <- ts(ts_national_df_detrended %>% pull(price_normed), start = c(2014, 3), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Trends: Normalized", x="Dollars")+
scale_y_continuous(limits=c(-3,3))
ggplotly(national_trend_normed_plot)
ts_national_df_detrended <- ts_national_df %>%
group_by(year) %>%
mutate(trend_removed = monthly_average - lag(monthly_average)) %>%
mutate(price_normed = rescale(trend_removed, to = c(-1, 1))) %>%
ungroup()
ts_national_detrended <- ts(ts_national_df_detrended %>% pull(price_normed), start = c(2014, 3), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Trends: Normalized", x="Dollars")+
scale_y_continuous(limits=c(-3,3))
ggplotly(national_trend_normed_plot)
ts_national_df
ts_national_df %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2))
ts_national_df %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3))
ts_national_df %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3))
ts_national_df %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
mutate(lag_monthly_average = mean(lag,lag2,lag3))
ts_national_df %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3)))
mean(c(3.73,3.71,3.59))
ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3)))
ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
mutate(lag_monthly_average = median(c(lag,lag2,lag3)))
ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3)))
ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
rowwise() %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3)))
ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
rowwise() %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3))) %>%
mutate(detrend_val = monthly_average-lag_monthly_average)
ts_national_df_detrended <- ts_national_df %>%
group_by(year) %>%
mutate(trend_removed = monthly_average - lag(monthly_average)) %>%
mutate(price_normed = rescale(trend_removed, to = c(-1, 1))) %>%
ungroup()
ts_national_detrended <- ts(ts_rollavg_detreend_national_df %>% pull(price_normed), start = c(2014, 6), frequency = 12)
ts_rollavg_detreend_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
rowwise() %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3))) %>%
mutate(detrend_val = monthly_average-lag_monthly_average)
ts_rollavg_detreend_national_df <- ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
rowwise() %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3))) %>%
mutate(detrend_val = monthly_average-lag_monthly_average)
ts_national_df_detrended <- ts_national_df %>%
group_by(year) %>%
mutate(trend_removed = monthly_average - lag(monthly_average)) %>%
mutate(price_normed = rescale(trend_removed, to = c(-1, 1))) %>%
ungroup()
ts_national_detrended <- ts(ts_rollavg_detreend_national_df %>% pull(price_normed), start = c(2014, 6), frequency = 12)
ts_national_detrended <- ts(ts_rollavg_detreend_national_df %>% pull(detrend_val), start = c(2014, 6), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Trends: Normalized", x="Dollars")+
scale_y_continuous(limits=c(-3,3))
ggplotly(national_trend_normed_plot)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Trends: Normalized", x="Dollars")+
scale_y_continuous(limits=c(-2,2))
ggplotly(national_trend_normed_plot)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Detrended Series", x="Dollars")+
scale_y_continuous(limits=c(-2,2))
ts_rollavg_detreend_national_df <- ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3)) %>%
filter(!is.na(lag3)) %>%
rowwise() %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3))) %>%
mutate(detrend_val = monthly_average-lag_monthly_average)
ts_national_detrended <- ts(ts_rollavg_detreend_national_df %>% pull(detrend_val), start = c(2014, 6), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Detrended Series", x="Dollars")+
scale_y_continuous(limits=c(-2,2))
ggplotly(national_trend_normed_plot)
ts_rollavg_detreend_national_df <- ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3),
lead = lead(monthly_average),
lead2 = lead(monthly_average,2),
lead3 = lead(monthly_average,3)
)%>%
filter(!is.na(lag3)) %>%
rowwise() %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3, lead, lead2, lead3))) %>%
mutate(detrend_val = monthly_average-lag_monthly_average)
ts_national_detrended <- ts(ts_rollavg_detreend_national_df %>% pull(detrend_val), start = c(2014, 6), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Detrended Series", x="Dollars")+
scale_y_continuous(limits=c(-2,2))
ggplotly(national_trend_normed_plot)
ts_rollavg_detreend_national_df <- ts_national_df %>%
ungroup() %>%
mutate(lag = lag(monthly_average),
lag2 = lag(monthly_average,2),
lag3 = lag(monthly_average,3))%>%
filter(!is.na(lag3)) %>%
rowwise() %>%
mutate(lag_monthly_average = mean(c(lag,lag2,lag3))) %>%
mutate(detrend_val = monthly_average-lag_monthly_average)
ts_national_detrended <- ts(ts_rollavg_detreend_national_df %>% pull(detrend_val), start = c(2014, 6), frequency = 12)
national_trend_normed_plot <- ggseasonplot(ts_national_detrended)+
theme_minimal()+
labs(title= "National Average Seasonal Gas Price Detrended Series", x="Dollars")+
scale_y_continuous(limits=c(-2,2))
ggplotly(national_trend_normed_plot)
ggseasonplot(ts_national, polar=TRUE)+
theme_minimal()
ggseasonplot(ts_national, polar=TRUE, linewidth = 1)+
theme_minimal()
ggseasonplot(ts_national, polar=TRUE, title="Polar Plot: National Average")+
theme_minimal()
ts_seaonal(ts_national, polar=TRUE, title="Polar Plot: National Average")+
theme_minimal()
ts_seasonal(ts_national, polar=TRUE, title="Polar Plot: National Average")+
theme_minimal()
ts_seasonal(ts_national, polar=TRUE, title="Polar Plot: National Average")
ggseasonplot(ts_national, polar=TRUE)+
theme_minimal()+
labs(title="Polar Plot: National Average")
ggplotly(ggseasonplot(ts_national, polar=TRUE)+
theme_minimal()+
labs(title="Polar Plot: National Average"))
ggseasonplot(ts_national, polar=TRUE)+
theme_minimal()+
labs(title="Polar Plot: National Average")
trend_recent_years
library(DBI)
library(RSQLite)
library(tidyverse)
library(here)
library(lubridate)
library(ggplot2)
library(TSstudio)
library(plotly)
library(stargazer)
library(glue)
library(tsibble)
library(forecast)
library(scales)
library(zoo)
knitr::opts_chunk$set(echo = FALSE, fig.show='asis')
current_date <- Sys.Date()
current_month <- month(Sys.Date())
first_day_of_current_month <- as.Date(format(current_date, "%Y-%m-01"))
con <- dbConnect(RSQLite::SQLite(), paste0(here(),params$db_file))
gas_raw <- dbGetQuery(con, "select * from gas_prices")
gas_monthly_average <- gas_raw %>%
mutate(year = year(period), month=month(period), period_month=as.Date(paste0(year,"-", month, "-01"))) %>%
filter(period_month < first_day_of_current_month) %>% #only show complete months
group_by(period_month, padd) %>%
summarise(monthly_average = round(mean(price),2), .groups = "drop") %>%
mutate(
padd_descrip = case_when(
padd=="PADD 1" ~"East Coast",
padd=="PADD 2" ~"Midwest",
padd=="PADD 3" ~"Gulf Coast",
padd=="PADD 4" ~"Rocky Mountain",
TRUE ~"West Coast"),
) %>% select(-padd)
gas_national_average <- gas_raw %>%
mutate(year = year(period), month=month(period), period_month=as.Date(paste0(year,"-", month, "-01"))) %>%
filter(as.Date(period_month) < first_day_of_current_month) %>%
group_by(period_month) %>%
summarise(monthly_average = round(mean(price),2), .groups = "drop") %>%
mutate(padd_descrip="National (All Regions)")
gas_monthly_average_w_national <- rbind(gas_monthly_average,gas_national_average)
gas_over_time_plot <- ggplot(data = gas_monthly_average_w_national, aes(x = period_month, y=monthly_average))+
geom_line(aes(color = padd_descrip))+
theme_minimal()+
scale_x_date(date_breaks = "5 years", date_labels="%Y")+
scale_y_continuous(breaks = seq(0,ceiling(max(gas_monthly_average_w_national$monthly_average)), by = 1),
limits = c(0, NA)) +
labs(y="Dollars", x="", color = "Region", title="Average Gas Price per Month")
ggplotly(gas_over_time_plot)
date_filter <- Sys.Date() %m-% months(6)
gas_over_time_plot <- ggplot(data = gas_monthly_average_w_national %>%
filter(period_month>date_filter), aes(x = period_month, y=monthly_average))+
geom_line(aes(color = padd_descrip))+
theme_minimal()+
scale_x_date(date_breaks = "1 months", date_labels="%B %Y")+
scale_y_continuous(breaks = seq(0,ceiling(max(gas_monthly_average_w_national$monthly_average)), by = 1),
limits = c(0, NA)) +
labs(y="Dollars", x="", color = "Region", title="Average Gas Price per Month: Past 6 Months")
ggplotly(gas_over_time_plot)
last_month <- current_month-1
last_month_name <- format(Sys.Date() %m-% months(1), '%B')
last_month_national_average <- gas_monthly_average_w_national %>%
filter(month(period_month) == last_month, padd_descrip == "National (All Regions)", period_month>Sys.Date() %m-% years(10)) %>%
mutate(year = year(period_month))
gas_month_comparison_plot <- ggplot(data = last_month_national_average)+
geom_bar(aes(x=year, y=monthly_average), stat="identity", fill = '#007bff')+
theme_minimal()+
scale_x_continuous(breaks = seq(min(last_month_national_average$year), max(last_month_national_average$year), by = 1))+
labs(x = "Year", y = "Monthly Average", title = glue("{last_month_name} Over Time"))
ggplotly(gas_month_comparison_plot)
yearly_average <- gas_raw %>%
mutate(year = year(period), month=month(period), period_month=as.Date(paste0(year,"-", month, "-01"))) %>%
filter(as.Date(period_month) < first_day_of_current_month) %>%
group_by(year) %>%
summarise(yearly_average = round(mean(price),2), .groups = "drop")
trend_recent_years <- gas_monthly_average_w_national %>%
filter(year(period_month)>=2020, padd_descrip=="National (All Regions)") %>%
mutate(year = year(period_month)) %>%
left_join(yearly_average, by="year")
gas_over_time_plot_recent <- ggplot(data = trend_recent_years, aes(x = period_month, y=monthly_average))+
geom_line(aes(color = "Monthly Average"), linewidth=0.75)+
geom_line(aes(y=yearly_average, color="Yearly Average"), linewidth=0.75)+
geom_vline(xintercept = as.Date("2021-01-01"), linetype = "dashed", color = "blue") +
geom_vline(xintercept = as.Date("2022-01-01"), linetype = "dashed", color = "blue") +
geom_vline(xintercept = as.Date("2023-01-01"), linetype = "dashed", color = "blue") +
theme_minimal()+
scale_x_date(date_breaks = "6 months", date_labels="%m/%y")+
scale_y_continuous(breaks = seq(0,ceiling(max(trend_recent_years$monthly_average)), by = 1),
limits = c(0, NA)) +
labs(y="Dollars", x="", color = "", title="National Average Gas Price per Month: 2020-YTD")+
theme(text = element_text(size = 14), # Set all text size to 14
axis.title = element_text(size = 14), # Set axis titles size to 14
axis.text = element_text(size = 14), # Set axis text size to 14
plot.title = element_text(size = 14))
ggplotly(gas_over_time_plot_recent)
gas_monthly_average_w_national
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared
ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average, stat="identity"))
ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_continuous(breaks="2 years", label="%Y")
yearly_avg_compared_plot
yearly_avg_compared
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_discrete(breaks="2 years", label="%Y")
yearly_avg_compared_plot
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_continuous(breaks="2 years")
yearly_avg_compared_plot
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 2))
yearly_avg_compared_plot
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
filter(year>=year(Sys.Date())-10) %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 2))
yearly_avg_compared_plot
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
filter(year>=year(Sys.Date())-15) %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_classic()+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
filter(year>=year(Sys.Date())-15) %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
theme(panel.grid.minor.y = element_blank())
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
theme(panel.grid.minor.y = element_blank())+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
theme(panel.grid.major.y = element_blank())+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
filter(year>=year(Sys.Date())-15) %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))
yearly_avg_compared_plot
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
filter(year>=year(Sys.Date())-15, padd_descrip="National (All Regions)") %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
filter(year>=year(Sys.Date())-15, padd_descrip=="National (All Regions)") %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))+
labs(x="Dollars", y="", title="Yearly Averages of ")
yearly_avg_compared_plot
yearly_avg_compared <- gas_monthly_average_w_national %>%
mutate(year = year(period_month)) %>%
filter(year>=year(Sys.Date())-15, padd_descrip=="National (All Regions)") %>%
group_by(year) %>%
summarise(yearly_average = mean(monthly_average), .groups="drop")
yearly_avg_compared_plot <- ggplot(data=yearly_avg_compared, aes(x=year))+
geom_bar(aes(y=yearly_average), stat="identity", fill = "#007bff")+
theme_minimal()+
theme(panel.grid.minor = element_blank())+
scale_x_continuous(breaks=seq(min(yearly_avg_compared$year), max(yearly_avg_compared$year), by = 1))+
labs(x="Dollars", y="", title="Yearly Averages Compared: National Average Price")
yearly_avg_compared_plot
ggseasonplot(ts_national, polar=TRUE)+
theme_minimal()+
labs(title="Polar Plot: National Average")
